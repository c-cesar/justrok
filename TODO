(This list is obviosly not complete, just here to not forget of these.)

Tree View:
  * Button/context menu to refresh the tree view? (Or be able to monitor
    file tree with inotify instead)
  * Double click/return to append to the playlist?
  * Expand remaining items after search
  * Remove artifacts in the pointer when dragging (display file count?;
    who filters unplayable items?)
  * Use a regex as well to control the appearance of file names?
  * Do not make UI calls in the PopulateTree threads.

Playlist:
  * Enqueue items
  * Stop after this/current track
  * Undo/redo?
  * Save playlist at quit and restore it
  * Tabs??
  * To be able to receive drops from eg. Konqueror, the Playlist must be
    able to read contents of directories by itself (never needed if
    dragging from the tree view)

UI:
  * Seek bar with elapsed --[]-- remaining.
  * connect track change / playlist change with statusbar and caption
  * Make stop button pop a menu between "now" and "after current track"

Options:
  * submit tracks to Last.fm (barf if module lastfm not available)
  * Use a regular expression to guess tags from the filename:
    { Tooltip: "The regex will be matched against the full path of the
    file. The supported groups are: "artist", "title", "album", "track".
    See README.Usage for details and an example. }
    [ ] _____________________________________ # re.compile it on focus leave
        (*) Use this regex to populate the playlist initially, but still
	    read the tags in the background
	( ) Do not read tags if the regex matches
	( ) Never read tags from files

Appearance:
  * Amarok classic theme?

Other:
  * Write setup.py
  * DCOP call for nowPlaying
  * Configured shortcut keys seems not to get used
  * It'd be nice to have module and line numbers in logging output, but
    it doesn't seem to work.

vi: sw=2
